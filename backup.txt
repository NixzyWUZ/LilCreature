	if Input.is_action_pressed("ui_down"):
		$AnimatedSprite2D.play("crouch")
		$CollisionShape2D.rotation_degrees = 90
		$CollisionShape2D.position.y = 9.0
	else:
		$CollisionShape2D.rotation_degrees = 0
		$CollisionShape2D.position.y = 0

extends CharacterBody2D

@onready var ap = $AnimatedSprite2D

const SPEED = 220.0
const JUMP_VELOCITY = -320.0
var is_crounching = false

func _process(delta: float) -> void:
	print(is_crounching)

func _physics_process(delta: float) -> void:
	# Add the gravity.
	
	if Globais.AreaZoom == true:
		$Camera2D.zoom = Vector2(5, 5)
	else:
		$Camera2D.zoom = Vector2(3, 3)	
	if not is_on_floor():
		velocity += get_gravity() * delta
	
	# Handle jump.
	if Input.is_action_just_pressed("ui_accept") and is_on_floor():
		velocity.y = JUMP_VELOCITY
	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var direction := Input.get_axis("ui_left", "ui_right")
	if direction:
		if direction > 0:
			velocity.x = direction * SPEED
			ap.flip_h = false
			ap.position.x = 8
			ap.play("Walk")
		else:
			velocity.x = direction * SPEED
			ap.flip_h = true
			ap.position.x = -8
			ap.play("Walk")
			
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		ap.play("idle")
		
		if Input.is_action_pressed("ui_up"):
			ap.play("lookUP")
		else:
			ap.play("idle")
	
	#Making him "crouch"
	
	
	#Making walkig while crouched
	
	#Animação caindo
	if velocity.y > 0:
		$AnimatedSprite2D.play("falling")

	move_and_slide()
